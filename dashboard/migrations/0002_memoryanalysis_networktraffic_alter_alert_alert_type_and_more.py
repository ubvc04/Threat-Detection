# Generated by Django 4.2.7 on 2025-08-10 06:47

import dashboard.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("dashboard", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MemoryAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("process_name", models.CharField(max_length=255)),
                ("process_id", models.IntegerField()),
                ("memory_region", models.CharField(max_length=20)),
                ("region_size", models.BigIntegerField()),
                ("protection", models.CharField(max_length=20)),
                ("content_hash", models.CharField(max_length=64)),
                ("indicators", models.JSONField(default=list)),
                ("analysis_result", models.TextField()),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="NetworkTraffic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("source_ip", models.GenericIPAddressField()),
                ("destination_ip", models.GenericIPAddressField()),
                ("source_port", models.IntegerField()),
                ("destination_port", models.IntegerField()),
                ("protocol", models.CharField(max_length=10)),
                ("packet_size", models.IntegerField()),
                ("flags", models.CharField(blank=True, max_length=20)),
                ("payload_sample", models.TextField(blank=True)),
                ("threat_score", models.FloatField(default=0.0)),
                ("is_malicious", models.BooleanField(default=False)),
                ("detection_method", models.CharField(blank=True, max_length=50)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AlterField(
            model_name="alert",
            name="alert_type",
            field=models.CharField(
                choices=[
                    ("PHISHING", "Phishing"),
                    ("SPAM", "Spam"),
                    ("MALWARE", "Malware"),
                    ("USB", "USB Activity"),
                    ("NETWORK", "Network"),
                    ("PROCESS", "Process"),
                    ("SYSMON", "Sysmon"),
                    ("SYSTEM", "System"),
                    ("API_HOOK", "API Hook"),
                    ("MEMORY_VIOLATION", "Memory Violation"),
                    ("SHELLCODE", "Shellcode Detection"),
                    ("RANSOMWARE", "Ransomware Activity"),
                    ("PRIVILEGE_ESCALATION", "Privilege Escalation"),
                    ("DNS_TUNNEL", "DNS Tunneling"),
                    ("C2_TRAFFIC", "C2 Communication"),
                    ("LATERAL_MOVEMENT", "Lateral Movement"),
                    ("REGISTRY_MODIFICATION", "Registry Modification"),
                    ("DRIVER_LOAD", "Driver Loading"),
                ],
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="alert",
            name="timestamp",
            field=models.DateTimeField(default=dashboard.models.get_current_time),
        ),
        migrations.AlterField(
            model_name="processlog",
            name="timestamp",
            field=models.DateTimeField(default=dashboard.models.get_current_time),
        ),
        migrations.AlterField(
            model_name="systeminfo",
            name="timestamp",
            field=models.DateTimeField(default=dashboard.models.get_current_time),
        ),
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("technique_id", models.CharField(max_length=20)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("INITIAL_ACCESS", "Initial Access"),
                            ("EXECUTION", "Execution"),
                            ("PERSISTENCE", "Persistence"),
                            ("PRIVILEGE_ESCALATION", "Privilege Escalation"),
                            ("DEFENSE_EVASION", "Defense Evasion"),
                            ("CREDENTIAL_ACCESS", "Credential Access"),
                            ("DISCOVERY", "Discovery"),
                            ("LATERAL_MOVEMENT", "Lateral Movement"),
                            ("COLLECTION", "Collection"),
                            ("EXFILTRATION", "Exfiltration"),
                            ("COMMAND_AND_CONTROL", "Command and Control"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("affected_system", models.CharField(max_length=255)),
                ("affected_user", models.CharField(max_length=100)),
                ("evidence", models.JSONField(default=dict)),
                ("confidence_score", models.FloatField(default=0.0)),
                (
                    "related_alerts",
                    models.ManyToManyField(blank=True, to="dashboard.alert"),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ForensicArtifact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "artifact_type",
                    models.CharField(
                        choices=[
                            ("MEMORY_DUMP", "Memory Dump"),
                            ("REGISTRY_SNAPSHOT", "Registry Snapshot"),
                            ("PROCESS_DUMP", "Process Dump"),
                            ("NETWORK_CAPTURE", "Network Capture"),
                            ("EVENT_LOG", "Event Log"),
                            ("FILE_SYSTEM", "File System Artifact"),
                        ],
                        max_length=50,
                    ),
                ),
                ("source_path", models.CharField(max_length=255)),
                ("file_hash", models.CharField(max_length=64)),
                ("size", models.BigIntegerField()),
                ("description", models.TextField()),
                ("metadata", models.JSONField(default=dict)),
                ("analysis_status", models.CharField(default="PENDING", max_length=20)),
                ("analysis_result", models.TextField(blank=True)),
                (
                    "related_alert",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="dashboard.alert",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
    ]
